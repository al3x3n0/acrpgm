// <auto-generated />
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

namespace MagicOnion
{
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::MagicOnion;
    using global::MagicOnion.Client;

    public static partial class MagicOnionInitializer
    {
        static bool isRegistered = false;

        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad)]
        public static void Register()
        {
            if(isRegistered) return;
            isRegistered = true;

            MagicOnionClientRegistry<AlienCell.Shared.Services.IAccountService>.Register((x, y, z) => new AlienCell.Shared.Services.AccountServiceClient(x, y, z));
            MagicOnionClientRegistry<AlienCell.Shared.Services.IAuthService>.Register((x, y, z) => new AlienCell.Shared.Services.AuthServiceClient(x, y, z));
            MagicOnionClientRegistry<AlienCell.Shared.Services.ICheatService>.Register((x, y, z) => new AlienCell.Shared.Services.CheatServiceClient(x, y, z));
            MagicOnionClientRegistry<AlienCell.Shared.Services.IGameService>.Register((x, y, z) => new AlienCell.Shared.Services.GameServiceClient(x, y, z));

            StreamingHubClientRegistry<AlienCell.Shared.Hubs.IChatHub, AlienCell.Shared.Hubs.IChatHubReceiver>.Register((a, _, b, c, d, e) => new AlienCell.Shared.Hubs.ChatHubClient(a, b, c, d, e));
        }
    }
}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

namespace MagicOnion.Resolvers
{
    using System;
    using MessagePack;

    public class MagicOnionResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new MagicOnionResolver();

        MagicOnionResolver()
        {

        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.formatter;
        }

        static class FormatterCache<T>
        {
            public static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> formatter;

            static FormatterCache()
            {
                var f = MagicOnionResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class MagicOnionResolverGetFormatterHelper
    {
        static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static MagicOnionResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(1)
            {
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Ulid, int>), 0 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Ulid, int>(default(global::System.Ulid), default(int));
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

namespace AlienCell.Shared.Services {
    using System;
    using MagicOnion;
    using MagicOnion.Client;
    using Grpc.Core;
    using MessagePack;

    [Ignore]
    public class AccountServiceClient : MagicOnionClientBase<global::AlienCell.Shared.Services.IAccountService>, global::AlienCell.Shared.Services.IAccountService
    {
        static readonly Method<byte[], byte[]> RegisterAccountMethod;
        static readonly Func<RequestContext, ResponseContext> RegisterAccountDelegate;
        static readonly Method<byte[], byte[]> UpdateAccountMethod;
        static readonly Func<RequestContext, ResponseContext> UpdateAccountDelegate;

        static AccountServiceClient()
        {
            RegisterAccountMethod = new Method<byte[], byte[]>(MethodType.Unary, "IAccountService", "RegisterAccount", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            RegisterAccountDelegate = _RegisterAccount;
            UpdateAccountMethod = new Method<byte[], byte[]>(MethodType.Unary, "IAccountService", "UpdateAccount", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            UpdateAccountDelegate = _UpdateAccount;
        }

        AccountServiceClient()
        {
        }

        public AccountServiceClient(CallInvoker callInvoker, MessagePackSerializerOptions serializerOptions, IClientFilter[] filters)
            : base(callInvoker, serializerOptions, filters)
        {
        }

        protected override MagicOnionClientBase<IAccountService> Clone()
        {
            var clone = new AccountServiceClient();
            clone.host = this.host;
            clone.option = this.option;
            clone.callInvoker = this.callInvoker;
            clone.serializerOptions = this.serializerOptions;
            clone.filters = filters;
            return clone;
        }

        public new IAccountService WithHeaders(Metadata headers)
        {
            return base.WithHeaders(headers);
        }

        public new IAccountService WithCancellationToken(System.Threading.CancellationToken cancellationToken)
        {
            return base.WithCancellationToken(cancellationToken);
        }

        public new IAccountService WithDeadline(System.DateTime deadline)
        {
            return base.WithDeadline(deadline);
        }

        public new IAccountService WithHost(string host)
        {
            return base.WithHost(host);
        }

        public new IAccountService WithOptions(CallOptions option)
        {
            return base.WithOptions(option);
        }
   
        static ResponseContext _RegisterAccount(RequestContext __context)
        {
            return CreateResponseContext<global::AlienCell.Shared.Protocol.RegisterAccountRequest, global::AlienCell.Shared.Protocol.RegisterAccountResponse>(__context, RegisterAccountMethod);
        }

        public global::MagicOnion.UnaryResult<global::AlienCell.Shared.Protocol.RegisterAccountResponse> RegisterAccount(global::AlienCell.Shared.Protocol.RegisterAccountRequest req)
        {
            return InvokeAsync<global::AlienCell.Shared.Protocol.RegisterAccountRequest, global::AlienCell.Shared.Protocol.RegisterAccountResponse>("IAccountService/RegisterAccount", req, RegisterAccountDelegate);
        }
        static ResponseContext _UpdateAccount(RequestContext __context)
        {
            return CreateResponseContext<global::AlienCell.Shared.Protocol.UpdateAccountRequest, global::AlienCell.Shared.Protocol.UpdateAccountResponse>(__context, UpdateAccountMethod);
        }

        public global::MagicOnion.UnaryResult<global::AlienCell.Shared.Protocol.UpdateAccountResponse> UpdateAccount(global::AlienCell.Shared.Protocol.UpdateAccountRequest req)
        {
            return InvokeAsync<global::AlienCell.Shared.Protocol.UpdateAccountRequest, global::AlienCell.Shared.Protocol.UpdateAccountResponse>("IAccountService/UpdateAccount", req, UpdateAccountDelegate);
        }
    }

    [Ignore]
    public class AuthServiceClient : MagicOnionClientBase<global::AlienCell.Shared.Services.IAuthService>, global::AlienCell.Shared.Services.IAuthService
    {
        static readonly Method<byte[], byte[]> GetChallengeAsyncMethod;
        static readonly Func<RequestContext, ResponseContext> GetChallengeAsyncDelegate;
        static readonly Method<byte[], byte[]> ValidateAsyncMethod;
        static readonly Func<RequestContext, ResponseContext> ValidateAsyncDelegate;

        static AuthServiceClient()
        {
            GetChallengeAsyncMethod = new Method<byte[], byte[]>(MethodType.Unary, "IAuthService", "GetChallengeAsync", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            GetChallengeAsyncDelegate = _GetChallengeAsync;
            ValidateAsyncMethod = new Method<byte[], byte[]>(MethodType.Unary, "IAuthService", "ValidateAsync", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            ValidateAsyncDelegate = _ValidateAsync;
        }

        AuthServiceClient()
        {
        }

        public AuthServiceClient(CallInvoker callInvoker, MessagePackSerializerOptions serializerOptions, IClientFilter[] filters)
            : base(callInvoker, serializerOptions, filters)
        {
        }

        protected override MagicOnionClientBase<IAuthService> Clone()
        {
            var clone = new AuthServiceClient();
            clone.host = this.host;
            clone.option = this.option;
            clone.callInvoker = this.callInvoker;
            clone.serializerOptions = this.serializerOptions;
            clone.filters = filters;
            return clone;
        }

        public new IAuthService WithHeaders(Metadata headers)
        {
            return base.WithHeaders(headers);
        }

        public new IAuthService WithCancellationToken(System.Threading.CancellationToken cancellationToken)
        {
            return base.WithCancellationToken(cancellationToken);
        }

        public new IAuthService WithDeadline(System.DateTime deadline)
        {
            return base.WithDeadline(deadline);
        }

        public new IAuthService WithHost(string host)
        {
            return base.WithHost(host);
        }

        public new IAuthService WithOptions(CallOptions option)
        {
            return base.WithOptions(option);
        }
   
        static ResponseContext _GetChallengeAsync(RequestContext __context)
        {
            return CreateResponseContext<global::AlienCell.Shared.Protocol.GetChallengeRequest, global::AlienCell.Shared.Protocol.GetChallengeResponse>(__context, GetChallengeAsyncMethod);
        }

        public global::MagicOnion.UnaryResult<global::AlienCell.Shared.Protocol.GetChallengeResponse> GetChallengeAsync(global::AlienCell.Shared.Protocol.GetChallengeRequest req)
        {
            return InvokeAsync<global::AlienCell.Shared.Protocol.GetChallengeRequest, global::AlienCell.Shared.Protocol.GetChallengeResponse>("IAuthService/GetChallengeAsync", req, GetChallengeAsyncDelegate);
        }
        static ResponseContext _ValidateAsync(RequestContext __context)
        {
            return CreateResponseContext<global::AlienCell.Shared.Protocol.ValidateChallengeRequest, global::AlienCell.Shared.Protocol.ValidateChallengeResponse>(__context, ValidateAsyncMethod);
        }

        public global::MagicOnion.UnaryResult<global::AlienCell.Shared.Protocol.ValidateChallengeResponse> ValidateAsync(global::AlienCell.Shared.Protocol.ValidateChallengeRequest req)
        {
            return InvokeAsync<global::AlienCell.Shared.Protocol.ValidateChallengeRequest, global::AlienCell.Shared.Protocol.ValidateChallengeResponse>("IAuthService/ValidateAsync", req, ValidateAsyncDelegate);
        }
    }

    [Ignore]
    public class CheatServiceClient : MagicOnionClientBase<global::AlienCell.Shared.Services.ICheatService>, global::AlienCell.Shared.Services.ICheatService
    {
        static readonly Method<byte[], byte[]> AddBuildingMethod;
        static readonly Func<RequestContext, ResponseContext> AddBuildingDelegate;
        static readonly Method<byte[], byte[]> AddArtifactMethod;
        static readonly Func<RequestContext, ResponseContext> AddArtifactDelegate;
        static readonly Method<byte[], byte[]> AddWeaponMethod;
        static readonly Func<RequestContext, ResponseContext> AddWeaponDelegate;
        static readonly Method<byte[], byte[]> AddHeroMethod;
        static readonly Func<RequestContext, ResponseContext> AddHeroDelegate;
        static readonly Method<byte[], byte[]> CreateNewUserMethod;
        static readonly Func<RequestContext, ResponseContext> CreateNewUserDelegate;

        static CheatServiceClient()
        {
            AddBuildingMethod = new Method<byte[], byte[]>(MethodType.Unary, "ICheatService", "AddBuilding", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            AddBuildingDelegate = _AddBuilding;
            AddArtifactMethod = new Method<byte[], byte[]>(MethodType.Unary, "ICheatService", "AddArtifact", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            AddArtifactDelegate = _AddArtifact;
            AddWeaponMethod = new Method<byte[], byte[]>(MethodType.Unary, "ICheatService", "AddWeapon", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            AddWeaponDelegate = _AddWeapon;
            AddHeroMethod = new Method<byte[], byte[]>(MethodType.Unary, "ICheatService", "AddHero", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            AddHeroDelegate = _AddHero;
            CreateNewUserMethod = new Method<byte[], byte[]>(MethodType.Unary, "ICheatService", "CreateNewUser", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            CreateNewUserDelegate = _CreateNewUser;
        }

        CheatServiceClient()
        {
        }

        public CheatServiceClient(CallInvoker callInvoker, MessagePackSerializerOptions serializerOptions, IClientFilter[] filters)
            : base(callInvoker, serializerOptions, filters)
        {
        }

        protected override MagicOnionClientBase<ICheatService> Clone()
        {
            var clone = new CheatServiceClient();
            clone.host = this.host;
            clone.option = this.option;
            clone.callInvoker = this.callInvoker;
            clone.serializerOptions = this.serializerOptions;
            clone.filters = filters;
            return clone;
        }

        public new ICheatService WithHeaders(Metadata headers)
        {
            return base.WithHeaders(headers);
        }

        public new ICheatService WithCancellationToken(System.Threading.CancellationToken cancellationToken)
        {
            return base.WithCancellationToken(cancellationToken);
        }

        public new ICheatService WithDeadline(System.DateTime deadline)
        {
            return base.WithDeadline(deadline);
        }

        public new ICheatService WithHost(string host)
        {
            return base.WithHost(host);
        }

        public new ICheatService WithOptions(CallOptions option)
        {
            return base.WithOptions(option);
        }
   
        static ResponseContext _AddBuilding(RequestContext __context)
        {
            return CreateResponseContext<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>(__context, AddBuildingMethod);
        }

        public global::MagicOnion.UnaryResult<global::System.Ulid> AddBuilding(global::System.Ulid userId, int dataId)
        {
            return InvokeAsync<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>("ICheatService/AddBuilding", new DynamicArgumentTuple<global::System.Ulid, int>(userId, dataId), AddBuildingDelegate);
        }
        static ResponseContext _AddArtifact(RequestContext __context)
        {
            return CreateResponseContext<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>(__context, AddArtifactMethod);
        }

        public global::MagicOnion.UnaryResult<global::System.Ulid> AddArtifact(global::System.Ulid userId, int dataId)
        {
            return InvokeAsync<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>("ICheatService/AddArtifact", new DynamicArgumentTuple<global::System.Ulid, int>(userId, dataId), AddArtifactDelegate);
        }
        static ResponseContext _AddWeapon(RequestContext __context)
        {
            return CreateResponseContext<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>(__context, AddWeaponMethod);
        }

        public global::MagicOnion.UnaryResult<global::System.Ulid> AddWeapon(global::System.Ulid userId, int dataId)
        {
            return InvokeAsync<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>("ICheatService/AddWeapon", new DynamicArgumentTuple<global::System.Ulid, int>(userId, dataId), AddWeaponDelegate);
        }
        static ResponseContext _AddHero(RequestContext __context)
        {
            return CreateResponseContext<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>(__context, AddHeroMethod);
        }

        public global::MagicOnion.UnaryResult<global::System.Ulid> AddHero(global::System.Ulid userId, int dataId)
        {
            return InvokeAsync<DynamicArgumentTuple<global::System.Ulid, int>, global::System.Ulid>("ICheatService/AddHero", new DynamicArgumentTuple<global::System.Ulid, int>(userId, dataId), AddHeroDelegate);
        }
        static ResponseContext _CreateNewUser(RequestContext __context)
        {
            return CreateResponseContext<global::System.Ulid>(__context, CreateNewUserMethod);
        }

        public global::MagicOnion.UnaryResult<global::System.Ulid> CreateNewUser()
        {
            return InvokeAsync<Nil, global::System.Ulid>("ICheatService/CreateNewUser", Nil.Default, CreateNewUserDelegate);
        }
    }

    [Ignore]
    public class GameServiceClient : MagicOnionClientBase<global::AlienCell.Shared.Services.IGameService>, global::AlienCell.Shared.Services.IGameService
    {
        static readonly Method<byte[], byte[]> RetireBuildingMethod;
        static readonly Func<RequestContext, ResponseContext> RetireBuildingDelegate;
        static readonly Method<byte[], byte[]> RetireArtifactMethod;
        static readonly Func<RequestContext, ResponseContext> RetireArtifactDelegate;
        static readonly Method<byte[], byte[]> RetireHeroMethod;
        static readonly Func<RequestContext, ResponseContext> RetireHeroDelegate;
        static readonly Method<byte[], byte[]> RetireWeaponMethod;
        static readonly Func<RequestContext, ResponseContext> RetireWeaponDelegate;
        static readonly Method<byte[], byte[]> GetUserAsyncMethod;
        static readonly Func<RequestContext, ResponseContext> GetUserAsyncDelegate;

        static GameServiceClient()
        {
            RetireBuildingMethod = new Method<byte[], byte[]>(MethodType.Unary, "IGameService", "RetireBuilding", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            RetireBuildingDelegate = _RetireBuilding;
            RetireArtifactMethod = new Method<byte[], byte[]>(MethodType.Unary, "IGameService", "RetireArtifact", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            RetireArtifactDelegate = _RetireArtifact;
            RetireHeroMethod = new Method<byte[], byte[]>(MethodType.Unary, "IGameService", "RetireHero", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            RetireHeroDelegate = _RetireHero;
            RetireWeaponMethod = new Method<byte[], byte[]>(MethodType.Unary, "IGameService", "RetireWeapon", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            RetireWeaponDelegate = _RetireWeapon;
            GetUserAsyncMethod = new Method<byte[], byte[]>(MethodType.Unary, "IGameService", "GetUserAsync", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);
            GetUserAsyncDelegate = _GetUserAsync;
        }

        GameServiceClient()
        {
        }

        public GameServiceClient(CallInvoker callInvoker, MessagePackSerializerOptions serializerOptions, IClientFilter[] filters)
            : base(callInvoker, serializerOptions, filters)
        {
        }

        protected override MagicOnionClientBase<IGameService> Clone()
        {
            var clone = new GameServiceClient();
            clone.host = this.host;
            clone.option = this.option;
            clone.callInvoker = this.callInvoker;
            clone.serializerOptions = this.serializerOptions;
            clone.filters = filters;
            return clone;
        }

        public new IGameService WithHeaders(Metadata headers)
        {
            return base.WithHeaders(headers);
        }

        public new IGameService WithCancellationToken(System.Threading.CancellationToken cancellationToken)
        {
            return base.WithCancellationToken(cancellationToken);
        }

        public new IGameService WithDeadline(System.DateTime deadline)
        {
            return base.WithDeadline(deadline);
        }

        public new IGameService WithHost(string host)
        {
            return base.WithHost(host);
        }

        public new IGameService WithOptions(CallOptions option)
        {
            return base.WithOptions(option);
        }
   
        static ResponseContext _RetireBuilding(RequestContext __context)
        {
            return CreateResponseContext<long, int>(__context, RetireBuildingMethod);
        }

        public global::MagicOnion.UnaryResult<int> RetireBuilding(long id)
        {
            return InvokeAsync<long, int>("IGameService/RetireBuilding", id, RetireBuildingDelegate);
        }
        static ResponseContext _RetireArtifact(RequestContext __context)
        {
            return CreateResponseContext<long, int>(__context, RetireArtifactMethod);
        }

        public global::MagicOnion.UnaryResult<int> RetireArtifact(long id)
        {
            return InvokeAsync<long, int>("IGameService/RetireArtifact", id, RetireArtifactDelegate);
        }
        static ResponseContext _RetireHero(RequestContext __context)
        {
            return CreateResponseContext<long, int>(__context, RetireHeroMethod);
        }

        public global::MagicOnion.UnaryResult<int> RetireHero(long id)
        {
            return InvokeAsync<long, int>("IGameService/RetireHero", id, RetireHeroDelegate);
        }
        static ResponseContext _RetireWeapon(RequestContext __context)
        {
            return CreateResponseContext<long, int>(__context, RetireWeaponMethod);
        }

        public global::MagicOnion.UnaryResult<int> RetireWeapon(long id)
        {
            return InvokeAsync<long, int>("IGameService/RetireWeapon", id, RetireWeaponDelegate);
        }
        static ResponseContext _GetUserAsync(RequestContext __context)
        {
            return CreateResponseContext<global::System.Ulid, global::AlienCell.Shared.Protocol.Models.UserModelDTO>(__context, GetUserAsyncMethod);
        }

        public global::MagicOnion.UnaryResult<global::AlienCell.Shared.Protocol.Models.UserModelDTO> GetUserAsync(global::System.Ulid id)
        {
            return InvokeAsync<global::System.Ulid, global::AlienCell.Shared.Protocol.Models.UserModelDTO>("IGameService/GetUserAsync", id, GetUserAsyncDelegate);
        }
    }
}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

namespace AlienCell.Shared.Hubs {
    using Grpc.Core;
    using MagicOnion;
    using MagicOnion.Client;
    using MessagePack;
    using System;
    using System.Threading.Tasks;

    [Ignore]
    public class ChatHubClient : StreamingHubClientBase<global::AlienCell.Shared.Hubs.IChatHub, global::AlienCell.Shared.Hubs.IChatHubReceiver>, global::AlienCell.Shared.Hubs.IChatHub
    {
        static readonly Method<byte[], byte[]> method = new Method<byte[], byte[]>(MethodType.DuplexStreaming, "IChatHub", "Connect", MagicOnionMarshallers.ThroughMarshaller, MagicOnionMarshallers.ThroughMarshaller);

        protected override Method<byte[], byte[]> DuplexStreamingAsyncMethod { get { return method; } }

        readonly global::AlienCell.Shared.Hubs.IChatHub __fireAndForgetClient;

        public ChatHubClient(CallInvoker callInvoker, string host, CallOptions option, MessagePackSerializerOptions serializerOptions, IMagicOnionClientLogger logger)
            : base(callInvoker, host, option, serializerOptions, logger)
        {
            this.__fireAndForgetClient = new FireAndForgetClient(this);
        }
        
        public global::AlienCell.Shared.Hubs.IChatHub FireAndForget()
        {
            return __fireAndForgetClient;
        }

        protected override void OnBroadcastEvent(int methodId, ArraySegment<byte> data)
        {
            switch (methodId)
            {
                case -1297457280: // OnJoin
                {
                    var result = MessagePackSerializer.Deserialize<string>(data, serializerOptions);
                    receiver.OnJoin(result); break;
                }
                case 532410095: // OnLeave
                {
                    var result = MessagePackSerializer.Deserialize<string>(data, serializerOptions);
                    receiver.OnLeave(result); break;
                }
                case -552695459: // OnSendMessage
                {
                    var result = MessagePackSerializer.Deserialize<global::AlienCell.Shared.Protocol.ChatMessageResponse>(data, serializerOptions);
                    receiver.OnSendMessage(result); break;
                }
                default:
                    break;
            }
        }

        protected override void OnResponseEvent(int methodId, object taskCompletionSource, ArraySegment<byte> data)
        {
            switch (methodId)
            {
                case -733403293: // JoinAsync
                {
                    var result = MessagePackSerializer.Deserialize<Nil>(data, serializerOptions);
                    ((TaskCompletionSource<Nil>)taskCompletionSource).TrySetResult(result);
                    break;
                }
                case 1368362116: // LeaveAsync
                {
                    var result = MessagePackSerializer.Deserialize<Nil>(data, serializerOptions);
                    ((TaskCompletionSource<Nil>)taskCompletionSource).TrySetResult(result);
                    break;
                }
                case -601690414: // SendMessageAsync
                {
                    var result = MessagePackSerializer.Deserialize<Nil>(data, serializerOptions);
                    ((TaskCompletionSource<Nil>)taskCompletionSource).TrySetResult(result);
                    break;
                }
                default:
                    break;
            }
        }
   
        public global::System.Threading.Tasks.Task JoinAsync(global::AlienCell.Shared.Protocol.JoinChatRoomRequest request)
        {
            return WriteMessageWithResponseAsync<global::AlienCell.Shared.Protocol.JoinChatRoomRequest, Nil>(-733403293, request);
        }

        public global::System.Threading.Tasks.Task LeaveAsync()
        {
            return WriteMessageWithResponseAsync<Nil, Nil>(1368362116, Nil.Default);
        }

        public global::System.Threading.Tasks.Task SendMessageAsync(string message)
        {
            return WriteMessageWithResponseAsync<string, Nil>(-601690414, message);
        }


        class FireAndForgetClient : global::AlienCell.Shared.Hubs.IChatHub
        {
            readonly ChatHubClient __parent;

            public FireAndForgetClient(ChatHubClient parentClient)
            {
                this.__parent = parentClient;
            }

            public global::AlienCell.Shared.Hubs.IChatHub FireAndForget()
            {
                throw new NotSupportedException();
            }

            public Task DisposeAsync()
            {
                throw new NotSupportedException();
            }

            public Task WaitForDisconnect()
            {
                throw new NotSupportedException();
            }

            public global::System.Threading.Tasks.Task JoinAsync(global::AlienCell.Shared.Protocol.JoinChatRoomRequest request)
            {
                return __parent.WriteMessageAsync<global::AlienCell.Shared.Protocol.JoinChatRoomRequest>(-733403293, request);
            }

            public global::System.Threading.Tasks.Task LeaveAsync()
            {
                return __parent.WriteMessageAsync<Nil>(1368362116, Nil.Default);
            }

            public global::System.Threading.Tasks.Task SendMessageAsync(string message)
            {
                return __parent.WriteMessageAsync<string>(-601690414, message);
            }

        }
    }
}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612
